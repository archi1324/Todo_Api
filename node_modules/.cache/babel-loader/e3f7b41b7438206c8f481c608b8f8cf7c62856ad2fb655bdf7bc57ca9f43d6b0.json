{"ast":null,"code":"var _jsxFileName = \"/Users/artursaahov/Desktop/\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B /todo_project/todo_intership/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport Todo from \"./Todos\"; // Убедитесь, что путь правильный\nimport Profiles from \"./Profile\"; // Убедитесь, что путь правильный\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedProfile, setSelectedProfile] = useState(() => {\n    return localStorage.getItem(\"selectedProfile\") || \"\";\n  });\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [profiles, setProfiles] = useState([]); // Состояние для профилей\n\n  const handleProfileChange = profile => {\n    setSelectedProfile(profile);\n    localStorage.setItem(\"selectedProfile\", profile); // Сохраняем выбранный профиль\n  };\n  useEffect(() => {\n    const fetchProfilesAndTodos = async () => {\n      try {\n        // Получаем пользователей\n        const usersResponse = await fetch('https://dummyjson.com/users');\n        const usersData = await usersResponse.json();\n        const profilesList = usersData.users.map(user => ({\n          id: user.id,\n          userId: user.userId // Используем userId из ответа\n        }));\n        setProfiles(profilesList); // Сохраняем профили\n\n        // Получаем задачи\n        const todosResponse = await fetch('https://dummyjson.com/todos');\n        const todosData = await todosResponse.json();\n        const filteredTodos = todosData.todos.filter(todo => todo.userId); // Убедитесь, что userId существует\n        setTodos(filteredTodos); // Устанавливаем задачи\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchProfilesAndTodos(); // Запрашиваем пользователей и задачи\n  }, []);\n  useEffect(() => {\n    const fetchTodosForSelectedProfile = async () => {\n      if (selectedProfile) {\n        console.log(\"Fetching todos for profile:\", selectedProfile); // Отладочный лог\n        try {\n          const todosResponse = await fetch('https://dummyjson.com/todos');\n          const todosData = await todosResponse.json();\n          const filteredTodos = todosData.todos.filter(todo => todo.userId === selectedProfile); // Фильтруем задачи по userId\n          console.log(\"Fetched todos:\", filteredTodos); // Отладочный лог\n          setTodos(filteredTodos); // Устанавливаем отфильтрованные задачи\n          setCurrentPage(1); // Сбрасываем страницу при смене профиля\n        } catch (error) {\n          console.error(\"Error fetching todos:\", error);\n          setTodos([]); // Очищаем список задач при ошибке\n        }\n      }\n    };\n    fetchTodosForSelectedProfile(); // Запрашиваем задачи для выбранного профиля\n  }, [selectedProfile]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        children: \"Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Todo, {\n          todos: todos,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profiles\",\n        element: /*#__PURE__*/_jsxDEV(Profiles, {\n          profiles: profiles,\n          onProfileChange: handleProfileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3TpF+5CjFQoKO6p+K4I2aNf7Vts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Link","Todo","Profiles","jsxDEV","_jsxDEV","App","_s","selectedProfile","setSelectedProfile","localStorage","getItem","todos","setTodos","currentPage","setCurrentPage","profiles","setProfiles","handleProfileChange","profile","setItem","fetchProfilesAndTodos","usersResponse","fetch","usersData","json","profilesList","users","map","user","id","userId","todosResponse","todosData","filteredTodos","filter","todo","error","console","fetchTodosForSelectedProfile","log","children","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onProfileChange","_c","$RefreshReg$"],"sources":["/Users/artursaahov/Desktop/проекты /todo_project/todo_intership/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport Todo from \"./Todos\"; // Убедитесь, что путь правильный\nimport Profiles from \"./Profile\"; // Убедитесь, что путь правильный\n\nfunction App() {\n  const [selectedProfile, setSelectedProfile] = useState(() => {\n    return localStorage.getItem(\"selectedProfile\") || \"\";\n  });\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [profiles, setProfiles] = useState([]); // Состояние для профилей\n\n  const handleProfileChange = (profile) => {\n    setSelectedProfile(profile);\n    localStorage.setItem(\"selectedProfile\", profile); // Сохраняем выбранный профиль\n  };\n\n  useEffect(() => {\n    const fetchProfilesAndTodos = async () => {\n      try {\n        // Получаем пользователей\n        const usersResponse = await fetch('https://dummyjson.com/users');\n        const usersData = await usersResponse.json();\n        const profilesList = usersData.users.map(user => ({\n          id: user.id,\n          userId: user.userId, // Используем userId из ответа\n        }));\n        setProfiles(profilesList); // Сохраняем профили\n\n        // Получаем задачи\n        const todosResponse = await fetch('https://dummyjson.com/todos');\n        const todosData = await todosResponse.json();\n        const filteredTodos = todosData.todos.filter(todo => todo.userId); // Убедитесь, что userId существует\n        setTodos(filteredTodos); // Устанавливаем задачи\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchProfilesAndTodos(); // Запрашиваем пользователей и задачи\n  }, []);\n\n  useEffect(() => {\n    const fetchTodosForSelectedProfile = async () => {\n      if (selectedProfile) {\n        console.log(\"Fetching todos for profile:\", selectedProfile); // Отладочный лог\n        try {\n          const todosResponse = await fetch('https://dummyjson.com/todos');\n          const todosData = await todosResponse.json();\n          const filteredTodos = todosData.todos.filter(todo => todo.userId === selectedProfile); // Фильтруем задачи по userId\n          console.log(\"Fetched todos:\", filteredTodos); // Отладочный лог\n          setTodos(filteredTodos); // Устанавливаем отфильтрованные задачи\n          setCurrentPage(1); // Сбрасываем страницу при смене профиля\n        } catch (error) {\n          console.error(\"Error fetching todos:\", error);\n          setTodos([]); // Очищаем список задач при ошибке\n        }\n      }\n    };\n\n    fetchTodosForSelectedProfile(); // Запрашиваем задачи для выбранного профиля\n  }, [selectedProfile]);\n\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\">Todo</Link>\n        <Link to=\"/profiles\">Profiles</Link>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Todo todos={todos} currentPage={currentPage} setCurrentPage={setCurrentPage} />} />\n        <Route path=\"/profiles\" element={<Profiles profiles={profiles} onProfileChange={handleProfileChange} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,IAAI,MAAM,SAAS,CAAC,CAAC;AAC5B,OAAOC,QAAQ,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,MAAM;IAC3D,OAAOe,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE;EACtD,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C,MAAMuB,mBAAmB,GAAIC,OAAO,IAAK;IACvCV,kBAAkB,CAACU,OAAO,CAAC;IAC3BT,YAAY,CAACU,OAAO,CAAC,iBAAiB,EAAED,OAAO,CAAC,CAAC,CAAC;EACpD,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,MAAMyB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF;QACA,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMC,SAAS,GAAG,MAAMF,aAAa,CAACG,IAAI,CAAC,CAAC;QAC5C,MAAMC,YAAY,GAAGF,SAAS,CAACG,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;UAChDC,EAAE,EAAED,IAAI,CAACC,EAAE;UACXC,MAAM,EAAEF,IAAI,CAACE,MAAM,CAAE;QACvB,CAAC,CAAC,CAAC;QACHd,WAAW,CAACS,YAAY,CAAC,CAAC,CAAC;;QAE3B;QACA,MAAMM,aAAa,GAAG,MAAMT,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMU,SAAS,GAAG,MAAMD,aAAa,CAACP,IAAI,CAAC,CAAC;QAC5C,MAAMS,aAAa,GAAGD,SAAS,CAACrB,KAAK,CAACuB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,MAAM,CAAC,CAAC,CAAC;QACnElB,QAAQ,CAACqB,aAAa,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDhB,qBAAqB,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd,MAAM2C,4BAA4B,GAAG,MAAAA,CAAA,KAAY;MAC/C,IAAI/B,eAAe,EAAE;QACnB8B,OAAO,CAACE,GAAG,CAAC,6BAA6B,EAAEhC,eAAe,CAAC,CAAC,CAAC;QAC7D,IAAI;UACF,MAAMwB,aAAa,GAAG,MAAMT,KAAK,CAAC,6BAA6B,CAAC;UAChE,MAAMU,SAAS,GAAG,MAAMD,aAAa,CAACP,IAAI,CAAC,CAAC;UAC5C,MAAMS,aAAa,GAAGD,SAAS,CAACrB,KAAK,CAACuB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,MAAM,KAAKvB,eAAe,CAAC,CAAC,CAAC;UACvF8B,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAEN,aAAa,CAAC,CAAC,CAAC;UAC9CrB,QAAQ,CAACqB,aAAa,CAAC,CAAC,CAAC;UACzBnB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,OAAOsB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7CxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAChB;MACF;IACF,CAAC;IAED0B,4BAA4B,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAAC/B,eAAe,CAAC,CAAC;EAErB,oBACEH,OAAA,CAACP,MAAM;IAAA2C,QAAA,gBACLpC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA,CAACJ,IAAI;QAACyC,EAAE,EAAC,GAAG;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxBzC,OAAA,CAACJ,IAAI;QAACyC,EAAE,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNzC,OAAA,CAACL,MAAM;MAAAyC,QAAA,gBACLpC,OAAA,CAACN,KAAK;QAACgD,IAAI,EAAC,GAAG;QAACC,OAAO,eAAE3C,OAAA,CAACH,IAAI;UAACU,KAAK,EAAEA,KAAM;UAACE,WAAW,EAAEA,WAAY;UAACC,cAAc,EAAEA;QAAe;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7GzC,OAAA,CAACN,KAAK;QAACgD,IAAI,EAAC,WAAW;QAACC,OAAO,eAAE3C,OAAA,CAACF,QAAQ;UAACa,QAAQ,EAAEA,QAAS;UAACiC,eAAe,EAAE/B;QAAoB;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACvC,EAAA,CAvEQD,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AAyEZ,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}