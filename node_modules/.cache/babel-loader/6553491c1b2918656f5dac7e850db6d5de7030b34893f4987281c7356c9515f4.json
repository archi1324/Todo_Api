{"ast":null,"code":"var _jsxFileName = \"/Users/artursaahov/Desktop/\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B /todo_project/todo_intership/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport Todo from \"./Todo\"; // Убедитесь, что путь правильный\nimport Profiles from \"./Profiles\"; // Убедитесь, что путь правильный\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedProfile, setSelectedProfile] = useState(() => {\n    return localStorage.getItem(\"selectedProfile\") || \"\";\n  });\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const handleProfileChange = profile => {\n    setSelectedProfile(profile);\n    localStorage.setItem(\"selectedProfile\", profile); // Сохраняем выбранный профиль\n  };\n  useEffect(() => {\n    const fetchTodos = async () => {\n      if (selectedProfile) {\n        try {\n          const response = await fetch(\"https://dummyjson.com/todos/user/${selectedProfile}\");\n          const data = await response.json();\n          setTodos(data.todos);\n          setCurrentPage(1); // Сбрасываем страницу при смене профиля\n        } catch (error) {\n          console.error(\"Error fetching todos:\", error);\n        }\n      }\n    };\n    fetchTodos();\n  }, [selectedProfile]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        children: \"Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Todo, {\n          todos: todos,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profiles\",\n        element: /*#__PURE__*/_jsxDEV(Profiles, {\n          onProfileChange: handleProfileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7vqIb7vebabU00+ntPIwIkhFMLM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Link","Todo","Profiles","jsxDEV","_jsxDEV","App","_s","selectedProfile","setSelectedProfile","localStorage","getItem","todos","setTodos","currentPage","setCurrentPage","handleProfileChange","profile","setItem","fetchTodos","response","fetch","data","json","error","console","children","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onProfileChange","_c","$RefreshReg$"],"sources":["/Users/artursaahov/Desktop/проекты /todo_project/todo_intership/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport Todo from \"./Todo\"; // Убедитесь, что путь правильный\nimport Profiles from \"./Profiles\"; // Убедитесь, что путь правильный\n\nfunction App() {\n  const [selectedProfile, setSelectedProfile] = useState(() => {\n    return localStorage.getItem(\"selectedProfile\") || \"\";\n  });\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleProfileChange = (profile) => {\n    setSelectedProfile(profile);\n    localStorage.setItem(\"selectedProfile\", profile); // Сохраняем выбранный профиль\n  };\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      if (selectedProfile) {\n        try {\n          const response = await fetch(\"https://dummyjson.com/todos/user/${selectedProfile}\");\n          const data = await response.json();\n          setTodos(data.todos);\n          setCurrentPage(1); // Сбрасываем страницу при смене профиля\n        } catch (error) {\n          console.error(\"Error fetching todos:\", error);\n        }\n      }\n    };\n\n    fetchTodos();\n  }, [selectedProfile]);\n\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\">Todo</Link>\n        <Link to=\"/profiles\">Profiles</Link>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Todo todos={todos} currentPage={currentPage} setCurrentPage={setCurrentPage} />} />\n        <Route path=\"/profiles\" element={<Profiles onProfileChange={handleProfileChange} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}