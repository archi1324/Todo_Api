{"ast":null,"code":"var _jsxFileName = \"/Users/artursaahov/Desktop/\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B /todo_project/todo_intership/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport Todo from \"./Todos\"; // Убедитесь, что путь правильный\nimport Profiles from \"./Profile\"; // Убедитесь, что путь правильный\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedProfile, setSelectedProfile] = useState(() => {\n    return localStorage.getItem(\"selectedProfile\") || \"\";\n  });\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [profiles, setProfiles] = useState([]); // Состояние для профилей\n\n  const handleProfileChange = profile => {\n    setSelectedProfile(profile.userId); // Изменяем здесь на userId\n    localStorage.setItem(\"selectedProfile\", profile.userId); // Сохраняем выбранный профиль\n    setCurrentPage(1); // Сбрасываем страницу при смене профиля\n  };\n  useEffect(() => {\n    const fetchTodosAndProfiles = async () => {\n      try {\n        // Получаем задачи\n        const todosResponse = await fetch('https://dummyjson.com/todos');\n        const todosData = await todosResponse.json();\n        setTodos(todosData.todos); // Устанавливаем задачи\n\n        // Получаем профили (пользователей) из задач\n        const uniqueUserIds = [...new Set(todosData.todos.map(todo => todo.userId))];\n        setProfiles(uniqueUserIds.map(id => ({\n          id,\n          userId: id\n        }))); // Создаем массив профилей\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchTodosAndProfiles(); // Запрашиваем задачи и профили\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        children: \"Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Todo, {\n          todos: todos,\n          selectedProfile: selectedProfile,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profiles\",\n        element: /*#__PURE__*/_jsxDEV(Profiles, {\n          profiles: profiles,\n          onProfileChange: handleProfileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ef+T/qQfcECSZY2Dle+fTwEQjuY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Link","Todo","Profiles","jsxDEV","_jsxDEV","App","_s","selectedProfile","setSelectedProfile","localStorage","getItem","todos","setTodos","currentPage","setCurrentPage","profiles","setProfiles","handleProfileChange","profile","userId","setItem","fetchTodosAndProfiles","todosResponse","fetch","todosData","json","uniqueUserIds","Set","map","todo","id","error","console","children","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onProfileChange","_c","$RefreshReg$"],"sources":["/Users/artursaahov/Desktop/проекты /todo_project/todo_intership/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport Todo from \"./Todos\"; // Убедитесь, что путь правильный\nimport Profiles from \"./Profile\"; // Убедитесь, что путь правильный\n\nfunction App() {\n  const [selectedProfile, setSelectedProfile] = useState(() => {\n    return localStorage.getItem(\"selectedProfile\") || \"\";\n  });\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [profiles, setProfiles] = useState([]); // Состояние для профилей\n\n  const handleProfileChange = (profile) => {\n    setSelectedProfile(profile.userId); // Изменяем здесь на userId\n    localStorage.setItem(\"selectedProfile\", profile.userId); // Сохраняем выбранный профиль\n    setCurrentPage(1); // Сбрасываем страницу при смене профиля\n  };\n\n  useEffect(() => {\n    const fetchTodosAndProfiles = async () => {\n      try {\n        // Получаем задачи\n        const todosResponse = await fetch('https://dummyjson.com/todos');\n        const todosData = await todosResponse.json();\n        setTodos(todosData.todos); // Устанавливаем задачи\n\n        // Получаем профили (пользователей) из задач\n        const uniqueUserIds = [...new Set(todosData.todos.map(todo => todo.userId))];\n        setProfiles(uniqueUserIds.map(id => ({ id, userId: id }))); // Создаем массив профилей\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchTodosAndProfiles(); // Запрашиваем задачи и профили\n  }, []);\n\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\">Todo</Link>\n        <Link to=\"/profiles\">Profiles</Link>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Todo todos={todos} selectedProfile={selectedProfile} currentPage={currentPage} setCurrentPage={setCurrentPage} />} />\n        <Route path=\"/profiles\" element={<Profiles profiles={profiles} onProfileChange={handleProfileChange} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}